{"version":3,"sources":["components/img/choco.gif","components/_dashboard/dashboard.js","components/_login_signup/login.js","components/about.js","components/_login_signup/signup.js","components/navbar.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Text","style","h1","Base","div","img","Base1","dashboard","className","Component","Loginbox","Login","props","myChangeHandler","event","setState","username","target","value","Password","vale","state","type","placeholder","onChange","this","to","About1","About","SignupBox","Signup","Background","Navbarr","Navbarelement","Linkk","Link","Navbar","href","Footer","rows","col","class","App","path","component","Dashboard","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.00ac6a17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/choco.ede10722.gif\";","import React, { Component } from 'react'\nimport style from 'styled-components'\nimport img from '../img/choco.gif'\n\nconst Text=style.h1\n`\ncolor:darkorange;\nfont-size:35px;\ntext-shadow: black 2px 2px 2px;\n\n\n\n`\nconst Base=style.div`\nbackground-image: url(${img});\nheight:500px;\nwidth:1350px;\nbackground-position: fixed; \nbackground-repeat: no-repeat; \n background-size: cover;\n`\n\nconst Base1=style.div`\nwidth:30%;\nmargin-left:0;\n\n`\n\nexport default class dashboard extends Component {\n    render() {\n        return (\n            <div>\n\n                <Base className=\"container-fluid  mt-0\"> \n                <Base1 className=\"container-fluid \">\n                    \n                    <Text className=\"overlay \">No More Wait For Your Turn!</Text>\n                    <Text className=\"overlay\">Just scan the code And see ...</Text>  \n                   <p className=\"text-light\"> Just use ur phone to scan the Qr code itioj eignj ergink eginok rgoinok rgoinrlg owirngok sroingsokrngoksnrgok sornrgk soirngsokrngsngrksrnginsrgknsgs</p>\n                   </Base1>\n             \n                </Base>\n                \n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport style from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nconst Loginbox=style.div`\nborder:solid black 1px;  \nwidth:400px;\nmargin-top:7em;\ncolor:white;\nbackground-color:brown;\n\n\n`\n\nexport default class Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { username: '',\n                        Password:''};\n      }\n      myChangeHandler = (event) => {\n        this.setState({username: event.target.value,\n                        Password:event.target.vale });\n      }\n \n      \n\n\n\n    render() {\n        return (\n            <div>\n                <Loginbox className=\"container-fluid\">\n                <form>\n               \n                    <h1 className=\"mb-4\">Login</h1>\n\n                     \n                <button className=\"btn bg-Success mt-3 ml-5 mr-5 mb-3\" type=\"click\">Admin</button>\n                <button className=\"btn bg-Success mt-3 ml-5 mr-5 mb-3\" type=\"click\">user</button>\n\n\n                    <p>Username :</p>\n                    <input\n                    className=\"form-control\"\n                    type='text'\n                    placeholder='username'\n                    onChange={this.myChangeHandler}\n                    />\n                    <small>haven't signup !</small>\n                    <Link to=\"/Signup\"><small> Signup Here</small></Link>\n                    <p>Password :</p>\n                    <input\n                    className=\"form-control\"\n                    type='text'\n                    placeholder='Password'\n                    onChange={this.myChangeHandler}\n                    />\n                    <br/>\n                   <button className=\"btn bg-Success mt-3\" type=\"Submit\">Login</button>\n                </form>\n\n                <h1>{this.state.username}</h1>\n                <h1>{this.state.Password}</h1>\n                </Loginbox>\n                \n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport style from 'styled-components'\n\n\n\nconst About1=style.div\n\n`\ndisplay:flex;\ntext-align:center;\nwidth:500px;\njustify-content: center;\nflex-direction: column;\n\n\n`\nexport default function About() {\n    return (\n        <div>\n            <About1 className=\"container-fluid mt-5\">\n                <p>Paragraphs are the building blocks of papers. Many students define paragraphs in terms of length: a paragraph is a group of at least five sentences, a paragraph is half a page long, etc. In reality, though, the unity and coherence of ideas among sentences is what constitutes a paragraph. A paragraph is defined as “a group of sentences or a single sentence that forms a unit” (Lunsford and Connors 116). Length and appearance do not determine whether a section in a paper is a paragraph. For instance, in some styles of writing, particularly journalistic styles, a paragraph can be just one sentence long. Ultimately, a paragraph is a sentence or group of sentences that support one main idea. In this handout, we will refer to this as the “controlling idea,” because it controls what happens in the rest of the paragraph.</p>\n            </About1>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport style from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nconst SignupBox=style.div`\nborder:solid black 1px;  \nwidth:400px;\nmargin-top:7em;\ncolor:white;\nbackground-color:brown;\n\n\n`\n\nexport default class Signup extends Component {\n    constructor(props) {\n        super(props);\n        \n      }\n\n    render() {\n        return (\n            <div>\n                <SignupBox className=\"container-fluid\">\n                <form>\n                    <h1 className=\"mb-4\">Signup</h1>\n\n                    <button className=\"btn bg-Success mt-3 ml-5 mr-5 mb-3\" type=\"click\">Admin</button>\n                    <button className=\"btn bg-Success mt-3 ml-5 mr-5 mb-3\" type=\"click\">user</button>\n\n                    <p>Username :</p>\n                    <input\n                    className=\"form-control\"\n                    type='text'\n                    placeholder='username'\n                    \n                    />\n                    <small>Already Have a Account !</small>\n                    <Link to=\"/Login\"><small> Login here</small></Link>\n                    <p>Password :</p>\n                    <input\n                    className=\"form-control\"\n                    type='password'\n                    placeholder='password'\n                  \n                    />\n                    <p>Email id:</p>\n                    <input\n                    className=\"form-control\"\n                    type='email'\n                    placeholder='Email'\n                  \n                    />\n                    <p>Phone number :</p>\n                    <input\n                    className=\"form-control\"\n                    type='text'\n                    placeholder='+91XXXXXXXXXX'\n                  \n                    />\n                    \n                    <br/>\n                   <button className=\"btn bg-Success mt-3\" type=\"Submit\">Signup</button>\n                </form>\n                </SignupBox>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport style from 'styled-components'\nimport {Link} from 'react-router-dom'\n\nconst Background=style.div\n`\n\n`\nconst Navbarr=style.div\n`\ndisplay:flex;\nflex-direction:row;\njustify-content: space-between;\n`\nconst Navbarelement=style.div`\ndisplay:flex;\nwidth:250px;\njustify-content: space-between;\n\n`\nconst Linkk=style(Link)`\n\ncolor:black;\n\n\n`\n\n\nexport default class Navbar extends Component {\n    render() {\n        return (\n            <div>\n                <Background className=\"container-fluid\">\n                    <Navbarr className=\"navbar\">\n                    <a className=\"navbar-brand text-dark\" href=\"#\">\n                    Contactless_dine_in\n                    </a>\n\n                        <Navbarelement>\n                         <Linkk to=\"/Dashboard\">Home</Linkk>\n                        <Linkk to =\"/About\" >About us</Linkk>\n                        <Linkk to=\"/Login\">signup/Login</Linkk>\n                        </Navbarelement>\n                        \n                    </Navbarr>     \n\n                </Background>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport style from 'styled-components';\nimport 'bootstrap-social';\n\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div className=\"bg-dark text-light\">\n                <hr className=\"bg-dark\"/>\n                <div className=\"container text-color-light\">\n                    <h5 className=\"display-7 text-center\">Contactless_dine_in</h5>\n                    <hr className=\"bg-light\"/>\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-4\">\n                            <lable>You can message us :</lable>\n                            <br/>\n                            <textarea placeholder=\"type your message\"  rows=\"5\" col=\"8\"></textarea>\n                            <br/>\n                            <button className=\" btn btn-success\">Submit </button>\n                            </div>\n                            <div className=\"col-md-4\">\n                               <lable> Mail us on :</lable>\n                               <br/>\n                            <a href=\"pradumansharma000@gmail.com\">contactLess_dine_in@gmail.com</a>\n                            </div>\n                            <div className=\"col-md-4\">\n                            <a class=\"btn btn-block btn-social btn-twitter\">\n                             <span class=\"fa fa-twitter\"></span> Connect on Twitter\n                            </a>\n                            <a class=\"btn btn-block btn-social btn-facebook\">\n                             <span class=\"fa fa-facebook\"></span> Connect on Facebook\n                            </a>\n                            <a class=\"btn btn-block btn-social btn-github\">\n                             <span class=\"fa fa-github\"></span> Connect on Github\n                            </a>\n                            <a class=\"btn btn-block btn-social btn-linkedin\">\n                             <span class=\"fa fa-linkedin\"></span> Connect on Linkdin\n                            </a>\n                            \n                            </div>\n\n                    </div>\n                    <h5 className=\"display-7 text-center \">Colaborations</h5>\n                    <div className=\"row mt-4\">\n                        \n                        <br/>\n                        <div className=\"col-md-6\">\n                            <div className=\"container-fluid \">\n                            <div className=\"card bg-dark \">\n                                <img></img>\n                                <div className=\"card-body\">\n                                <h5 class=\"card-title\">Parul Kohli</h5>\n                                 <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                                 <a href=\"#\" class=\"btn btn-primary\">Check Resume --></a>\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6 \">\n                            <div className=\"container-fluid \">\n                            <div className=\"card bg-dark \">\n                                <img></img>\n                                <div className=\"card-body\">\n                                <h5 class=\"card-title\">praduman </h5>\n                                 <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n                                 <a href=\"#\" class=\"btn btn-primary\">Check Resume --></a>\n                                </div>\n                            </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n","import React,{Component} from 'react';\nimport './App.css';\nimport Dashboard from './components/_dashboard/dashboard';\nimport Login from './components/_login_signup/login'\n\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\n\nimport About from './components/about';\nimport Signup from './components/_login_signup/signup'\nimport Navbar from './components/navbar';\nimport Footer from './components/footer'\n\nexport default class App extends Component {\n  render(){\n  return (\n    \n    <Router>\n         \n          <Navbar/>\n          <Switch>\n          \n              <Route path=\"/\"   component ={Dashboard}/>\n              <Route path=\"/About\" exact component={About}/>\n              <Route path=\"/Login\"  exact component={Login}/>\n              <Route path=\"/Signup\" exact component={Signup}/>\n          </Switch>\n          <Footer/>\n      </Router>\n  );\n}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}